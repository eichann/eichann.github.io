<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hugo on eichann&#39;s blog</title>
    <link>/tags/hugo/</link>
    <description>Recent content in Hugo on eichann&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Wed, 22 Apr 2015 21:10:09 +0900</lastBuildDate>
    
	<atom:link href="/tags/hugo/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>hugo &#43; Github Pagesでブログ作成に挑戦した話</title>
      <link>/post/first/</link>
      <pubDate>Wed, 22 Apr 2015 21:10:09 +0900</pubDate>
      
      <guid>/post/first/</guid>
      <description>hugoでブログをやってみる ブログをやってみようと思った時に、ここはRuby書いてる人っぽくjekyllでやってみるか！って思って調べてたら、もっと良さそうなものを見つけた。gitでリポジトリをプッシュするだけで簡単にブログ記事をあげられる＆記事の生成がめっちゃ早いということで評判が良かったので、hugoを使ってみることにしました。そして、ドハマりしたのでメモ。
hugoの魅力 1. とにかく記事作成が楽 最終的にですが、ターミナルから以下の手順だけでGithub pagesにてブログが更新できます。
$cd ~/blog #hugoによって生成されたディレクトリまで移動 $hugo new post/hugahoge.md #新規マークダウンファイルの作成 $ ./deploy.sh #色々なコマンドの入ったシェルスクリプトの実行(コピペで手に入る) $ git push origin master #hugoによって生成されたディレクトリのリポジトリをgithub pagesのリモートにプッシュ(これはホントはやらなくて良い手順のハズ・・・・)  2. &amp;ndash;watchコマンドでオートリロード!! hugoでは、以下のコマンドでlocalhost:1313からプレビューができます。この時、--watchコマンドを利用することでmdファイルを更新する度にブラウザ側のプレビューも自動で更新されます。
#hugoのルート・ディレクトリから・・・ $hugo server --watch -t hugo-zen #--watchコマンド！  これがかなり便利です。いちいちcommand + r する手間が省けるのが素晴らしい。デュアルディスプレイとかwindow magnetとかで捗ります。
3.Markdown記法で気軽に書いて更新できる これはjekyllなどでもそうですが、mdで書けるのは非常に楽です。普段からmdを書いているのもありますが、もう正直色をつけたり文字の大きさをいちいち変えたり「できる」というだけでまどろっこしいので。
4.記事の生成が早い これは多くの人が言及しているので割愛。jekyllにはすごくお世話になっているのですが正直生成でストレスを感じたことはありません。上記のオートリロードが無いくらいですかね。
インストール ~ テーマの適用 インストール とっても簡単。homebrewユーザーなら、以下のコマンドで。
$cd #ホームディレクトリに移動 $brew install hugo #hugaじゃないよ  続いて、以下のコマンドで新たなhugoプロジェクトを作成。
$hugo new site &amp;lt;your_site_name&amp;gt; #&amp;lt;&amp;gt;の部分は任意の名前を入れてね！ $cd &amp;lt;your_site_name&amp;gt; #プロジェクトのルート・ディレクトリに移動しておきましょう  テーマの適用 このままビルドしても記事を作成することはできるのですが、最初からある程度デザインができている方が楽です。というわけで、テーマを適用しましょう。まずは以下のコマンドでテーマを利用できるようにします。</description>
    </item>
    
  </channel>
</rss>