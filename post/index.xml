<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on eichann&#39;s blog</title>
    <link>/post/</link>
    <description>Recent content in Posts on eichann&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Wed, 23 Dec 2015 13:47:25 +0900</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>【WIP】ブラウザにHello Worldを出すにはどうすればよいか①</title>
      <link>/post/4/</link>
      <pubDate>Wed, 23 Dec 2015 13:47:25 +0900</pubDate>
      
      <guid>/post/4/</guid>
      <description>要旨 ・Railsを利用せずに、ブラウザ上に&amp;rdquo;Hello Worldを出したい&amp;rdquo; ・前提知識が無さ過ぎるので、まずはそこを埋めることにした ・Webサーバ、アプリケーションサーバ、Rack、HTTP、これらについて書いていく</description>
    </item>
    
    <item>
      <title>【WIP】【生産性アップ】ポモドーロ・テクニックで作業効率があがった</title>
      <link>/post/3/</link>
      <pubDate>Sun, 06 Dec 2015 13:47:25 +0900</pubDate>
      
      <guid>/post/3/</guid>
      <description>ポモドーロって何？ 25分1つの作業に集中し、5分間休憩。これを1セットとし、4セットごとに30分の長い休憩を挟むという時間管理法です。なぜポモドーロというのかは知りませんがポモドーロとはトマトの意味だそうで。</description>
    </item>
    
    <item>
      <title>【WIP】「反応しない練習」を読んだ</title>
      <link>/post/second/</link>
      <pubDate>Wed, 02 Dec 2015 02:23:45 +0900</pubDate>
      
      <guid>/post/second/</guid>
      <description>読書したものを紹介。おすすめ度が高いものを読んで欲しい。
原始仏教の教えに基づき、幸せに生きるための考え方のコツを伝えてくれる本。
おすすめ度 ☆☆☆☆☆
すごくおすすめ！
ポイント 心とは放っておくと常に何かを求める性質を持っているので、そういうものだと理解し客観視できるように務める。 また、主観による判断をすることは無駄である。主観による判断は全て妄想に過ぎないからである。
ここが良かった 本書によれば、人は皆「求める心」を持っている。例えば、生存欲求、睡眠欲求、食欲、承認欲求などである。これは人である限り仕方のないことであり、欲求から逃れることはできない。この事実を「心は元来『欲求するもの』なんだ」という形で理解することで、これまでは1つ1つの悩みごとに対してなんとか対処しようとしていたところをもう一つメタ的な視点で捉えるという知見を得ることができたのが良かった。 なるほど確かに「心はそういうものなんだ」と一歩引いた目で見ると、なぜだか感情が落ち着く。
また、「自信とは不合理な考え方である」「勝手に判断をしない」といった新たな考え方を知ることができたのも良かった。
求める心を理解する 心は常に何かを求める存在だということを認識すると、それだけで不思議と落ち着きを取り戻すことができる。また、誰かに何かを言われること、誰かに欲されたいと思うことなど、自分の心が生み出している観念は全て妄想であると切り捨てる。妄想には、百害あれど一理無しである。無駄に不快な気分を生み出すだけなので、なるべく妄想しないようにする。
自信は意味が無い ここで言う自信とは、過去の成功に裏付けられた失敗する気がしないという慢心である。たとえ慢心でなかったとしても、自信を持つことに意味はない。なぜなら、自信があったとしても、次に上手くいくかどうかはわからないからだ。
勝手に判断しない 人に対して勝手に評価を下しても、それは妄想に過ぎない。常に初めて会う人のように接する
とにかく、今を見よう 今、できることを確実にやる以外に不安を取り除く方法はない。今、目の前のことに集中して取り組めなければ、いつまで経っても現状からは抜け出せない。
関連して、「正しい努力は内的動機でしかやり得ない」といったことも書かれていた。心が１つのことに集中、執着している間は、心は快い状態になっている。そのため余計集中、執着しやすくなる。
ここが悪かった ネガティブな動機づけにより奮起して頑張る、といったことも人生にはあると思うんだけど、これに関しては触れられていなかった。競争について書かれている部分も、「勝ちたいとも負けたいとも思うな」というなんとも微妙な主張になっているように思えた。</description>
    </item>
    
    <item>
      <title>hugo &#43; Github Pagesでブログ作成に挑戦した話</title>
      <link>/post/first/</link>
      <pubDate>Wed, 22 Apr 2015 21:10:09 +0900</pubDate>
      
      <guid>/post/first/</guid>
      <description>hugoでブログをやってみる ブログをやってみようと思った時に、ここはRuby書いてる人っぽくjekyllでやってみるか！って思って調べてたら、もっと良さそうなものを見つけた。gitでリポジトリをプッシュするだけで簡単にブログ記事をあげられる＆記事の生成がめっちゃ早いということで評判が良かったので、hugoを使ってみることにしました。そして、ドハマりしたのでメモ。
hugoの魅力 1. とにかく記事作成が楽 最終的にですが、ターミナルから以下の手順だけでGithub pagesにてブログが更新できます。
$cd ~/blog #hugoによって生成されたディレクトリまで移動 $hugo new post/hugahoge.md #新規マークダウンファイルの作成 $ ./deploy.sh #色々なコマンドの入ったシェルスクリプトの実行(コピペで手に入る) $ git push origin master #hugoによって生成されたディレクトリのリポジトリをgithub pagesのリモートにプッシュ(これはホントはやらなくて良い手順のハズ・・・・)  2. &amp;ndash;watchコマンドでオートリロード!! hugoでは、以下のコマンドでlocalhost:1313からプレビューができます。この時、--watchコマンドを利用することでmdファイルを更新する度にブラウザ側のプレビューも自動で更新されます。
#hugoのルート・ディレクトリから・・・ $hugo server --watch -t hugo-zen #--watchコマンド！  これがかなり便利です。いちいちcommand + r する手間が省けるのが素晴らしい。デュアルディスプレイとかwindow magnetとかで捗ります。
3.Markdown記法で気軽に書いて更新できる これはjekyllなどでもそうですが、mdで書けるのは非常に楽です。普段からmdを書いているのもありますが、もう正直色をつけたり文字の大きさをいちいち変えたり「できる」というだけでまどろっこしいので。
4.記事の生成が早い これは多くの人が言及しているので割愛。jekyllにはすごくお世話になっているのですが正直生成でストレスを感じたことはありません。上記のオートリロードが無いくらいですかね。
インストール ~ テーマの適用 インストール とっても簡単。homebrewユーザーなら、以下のコマンドで。
$cd #ホームディレクトリに移動 $brew install hugo #hugaじゃないよ  続いて、以下のコマンドで新たなhugoプロジェクトを作成。
$hugo new site &amp;lt;your_site_name&amp;gt; #&amp;lt;&amp;gt;の部分は任意の名前を入れてね！ $cd &amp;lt;your_site_name&amp;gt; #プロジェクトのルート・ディレクトリに移動しておきましょう  テーマの適用 このままビルドしても記事を作成することはできるのですが、最初からある程度デザインができている方が楽です。というわけで、テーマを適用しましょう。まずは以下のコマンドでテーマを利用できるようにします。</description>
    </item>
    
  </channel>
</rss>